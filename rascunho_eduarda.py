from bokeh.io import output_file, show
from bokeh.models import ColumnDataSource
from bokeh.plotting import figure
import pandas as pd

'''

#1: GRÁFICO DE BARRAS DE GERAÇÃO DE ELETRICIDADE A PARTIR DO VENTO POR PAÍS (MEDIDDO EM TERAWATT-HORA)
#AINDA NÃO DEU CERTO 

# Leitura do arquivo CSV
data = pd.read_csv("World Energy Consumption.csv")

# Filtrar os dados para o ano de 2020
df_filtered = data[data['year'] == 2020]

# Ordenar os valores da coluna 'wind_electricity' em ordem decrescente
df_sorted = df_filtered.sort_values('wind_electricity', ascending=False)

# Selecionar os 10 maiores valores da coluna 'wind_electricity'
df_top_10 = df_sorted.head(10)

# Selecionar apenas as colunas desejadas ('country' e 'wind_electricity')
df_top_10_filtered = df_top_10[['country', 'wind_electricity']]

# Criar um ColumnDataSource com os dados organizados
data_organized = ColumnDataSource(df_top_10_filtered)

# Configurar a saída para um arquivo HTML
output_file("bar_chart.html")

# Criar uma figura
p = figure(title="Países que mais geraram energia a partir do vento em 2020", x_axis_label='País', y_axis_label='Geração de eletricidade a partir do vento em terawatt-hora')

# Plotar o gráfico de barras
p.vbar(x='country', top='wind_electricity', width=0.5, source=data_organized)

# Mostrar o gráfico
show(p)

'''

#2: GRÁFICO DE LINHA CONSUMO PER CAPITA DE ELETRICIDADE DO VENTO( MEDIDA EM kWh)

# Leitura do arquivo CSV
data = pd.read_csv("World Energy Consumption.csv")

# Filtragem de dados para o país "Brazil" nos últimos 15 anos:
df_filtered_country = data[(data['country'] == 'Brazil') & (data['year'] >= (data['year'].max() - 15))]

# Criando o ColumnDataSource com os dados
source = ColumnDataSource(df_filtered_country)

# Configurando a saída para um arquivo HTML:
output_file("line_chart.html") 

# Criando uma figura:
p = figure(title="PER CAPITA CONSUMPTION OF ELECTRICITY GENERATED BY WIND IN BRAZIL IN THE LAST 15 YEARS",
           x_axis_label='Ano', y_axis_label='Energia Eólica per Capita', width=1200, height=600)

# Plotando o gráfico de linha:
p.line('year', 'wind_energy_per_capita', line_width=4, source=source)

# Alterando o tamanho e a cor da linha:
p.line('year', 'wind_energy_per_capita', line_width=2, line_color="#0C3B40", source=source)

p.title.text_font = "Georgia"  # Altera a fonte do título para Georgia
p.title.text_font_size = "14pt"  # Altera o tamanho da fonte do título para 14 pontos
p.title.text_color = "#0C3B40"  # Altera a cor do texto do título para vermelho
p.title.text_align = "center"  # Alinhando o título no centro do gráfico

p.xaxis.axis_label_text_font = "Georgia"  # Altera a fonte do rótulo do eixo x para Georgia
p.xaxis.axis_label_text_font_size = "14pt"  # Altera o tamanho da fonte do rótulo do eixo x para 12 pontos
p.xaxis.axis_label_text_color = "#0C3B40"  # Altera a cor do texto do rótulo do eixo x para azul

p.yaxis.axis_label_text_font = "Georgia"  # Altera a fonte do rótulo do eixo y para Georgia
p.yaxis.axis_label_text_font_size = "14pt"  # Altera o tamanho da fonte do rótulo do eixo y para 10 pontos
p.yaxis.axis_label_text_color = "#0C3B40"  # Altera a cor do texto do rótulo do eixo y para verde

p.background_fill_color = "#38ABF2"  # Altera a cor de fundo do gráfico 

# Mostrando o gráfico:
show(p)


